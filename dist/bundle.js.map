{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/gamwrapper.ts","webpack:///./src/components/hello.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","ReactDom","hello_1","render","createElement","Hello","compiler","framework","document","getElementById","ReactDOM","gpt","gamWrapper","_self","this","log","querySelector","options","root","rootMargin","threshold","ads","querySelectorAll","window","addEventListener","event","googletag","apiReady","setGpt","setupAd","handleIntersect","entries","observer","forEach","entry","intersectionRatio","renderAd","target","id","setTimer","resetTimer","_this","cmd","push","ad","slot","defineSlot","addService","pubads","adSlots","isLoaded","canRefresh","screenTime","timerId","bindEvent","enableServices","IntersectionObserver","observe","slotId","display","console","refreshAd","refresh","setInterval","clearInterval","default","_super","__extends","props","Component"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = React;","import * as React from \"react\";\nimport * as ReactDom from \"react-dom\";\nimport './components/gamwrapper';\n\nimport { Hello } from \"./components/hello\"\n\nReactDom.render(\n    <Hello compiler=\"TypeScript\" framework=\"React\" />,\n    document.getElementById( \"example\" )\n);","module.exports = ReactDOM;","let gpt: any = {};\n\nclass gamWrapper {\n\n    static adSlots: { [id: string]: any; } = {};\n    static ads: any;\n    public log: {};\n    public options: {};\n\n    constructor() {\n\n        let _self = this;\n        this.log = document.querySelector( '#log' );\n        this.options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 0.75\n        };\n\n        gamWrapper.ads = document.querySelectorAll( '.gamwrapper-ad' );\n\n        window.addEventListener( 'load', function(event) {\n            if ( (<any>window).googletag && (<any>window).googletag.apiReady ) {\n                _self.setGpt();\n                _self.setupAd();\n            }\n        } );\n    }\n\n    public setGpt() {\n        gpt = (<any>window).googletag;\n    }\n\n    public handleIntersect( entries: Array<object>, observer: object ) {\n\n        entries.forEach( function( entry: any ) {\n            if ( 0.75 < entry.intersectionRatio ) {\n                this.renderAd( entry.target.id );\n                this.setTimer( entry.target.id );\n            } else {\n                this.resetTimer( entry.target.id );\n            }\n        }, new gamWrapper() );\n    }\n\n    public setupAd() {\n\n        gpt.cmd.push( () => {\n\n            let ad: any = {};\n\n            gamWrapper.ads.forEach( ( ad: any ) => {\n                let slot = gpt.defineSlot(\n                    '/6355419/Travel/Europe/France/Paris',\n                    [\n                        [300, 250],\n                    ],\n                    ad.id\n                ).addService( gpt.pubads() );\n\n                gamWrapper.adSlots[ ad.id ] = slot;\n                gamWrapper.adSlots[ ad.id ].isLoaded = false;\n                gamWrapper.adSlots[ ad.id ].canRefresh = false;\n                gamWrapper.adSlots[ ad.id ].screenTime = 0;\n                gamWrapper.adSlots[ ad.id ].timerId = 0;\n\n                this.bindEvent( gamWrapper.adSlots[ ad.id ] );\n\n                gpt.enableServices();\n\n                let target = document.querySelector( '#' + ad.id );\n                let observer = new IntersectionObserver( this.handleIntersect, this.options );\n                    \n                observer.observe( target );\n            } );\n        } );\n    }\n\n    public renderAd( slotId: string ) {\n        gpt.cmd.push( () => {\n            if ( gamWrapper.adSlots[ slotId ] && false === gamWrapper.adSlots[ slotId ].isLoaded ) {\n                gpt.display( slotId );\n            }\n        } );\n    }\n\n    public bindEvent( slot: any ) {\n    \n        gpt.pubads().addEventListener( 'slotRequested', ( event: any ) => {\n            if ( event.slot === slot ) {\n                console.log('Slot has been requested:');\n            }\n        } );\n\n        gpt.pubads().addEventListener( 'slotRenderEnded', ( event: any ) => {\n            if ( event.slot === slot ) {\n                slot.isLoaded = true;\n                console.log( 'Slot Render Ended' );\n            }\n        } );\n\n        gpt.pubads().addEventListener( 'impressionViewable', ( event: any ) => {\n            if ( event.slot == slot ) {\n                console.log( 'Slot Impresssion Viewable' );\n                slot.canRefresh = true;\n            }\n        } );\n    }\n\n    public refreshAd( slot: any ) {\n        gpt.cmd.push( () => {\n            if ( slot && true === slot.canRefresh ) {\n                gpt.pubads().refresh( [ slot ] );\n                slot.screenTime = 0;\n                console.log( 'Ad refreshed' );\n            }\n        } );\n    }\n\n    public setTimer( slotId: string ) {\n\n        if ( gamWrapper.adSlots[ slotId ] && 0 === gamWrapper.adSlots[ slotId ].timerId ) {\n\n            gamWrapper.adSlots[ slotId ].timerId = setInterval( () => {\n                gamWrapper.adSlots[ slotId ].screenTime += 1;\n                console.log( slotId + ' Screen Time: ' + gamWrapper.adSlots[ slotId ].screenTime );\n                if ( 30 < gamWrapper.adSlots[ slotId ].screenTime ) {\n                    console.log( slotId + ' Screen Time > 30s' );\n                    this.refreshAd( gamWrapper.adSlots[ slotId ] );\n                }\n            }, 1000 );\n            console.log( 'Timer set: ' + slotId );\n        }\n    }\n\n    public resetTimer( slotId: string ) {\n        if ( gamWrapper.adSlots[ slotId ] && 0 !== gamWrapper.adSlots[ slotId ].timerId ) {\n            clearInterval( gamWrapper.adSlots[ slotId ].timerId );\n            gamWrapper.adSlots[ slotId ].timerId = 0;\n            console.log( 'Timer Reset: ' + slotId );\n        }\n    }\n}\n\nexport default new gamWrapper();","import * as React from \"react\";\n\nexport interface HelloProps {\n    compiler: string;\n    framework: string;\n}\n\nexport class Hello extends React.Component<HelloProps, {}> {\n    render() {\n        return <h1>Hello from {this.props.compiler} and {this.props.framework}!</h1>\n    }\n}"],"sourceRoot":""}